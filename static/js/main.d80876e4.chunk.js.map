{"version":3,"sources":["view/login.js","controller/login.js","firestore.js","view/square.js","controller/db_handler.js","view/tablerow.js","view/main.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","pass","type","handle_submitted","bind","assertThisInitialized","handle_change","event","auth","console","log","authenticate","target","checked","change_state","setState","defineProperty","id","value","react_default","a","createElement","class","onSubmit","placeholder","onChange","data-toggle","name","autocomplete","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","Square","reserve","chair_id","collection","concat","add","date_added","Date","getUTCMilliseconds","then","docRef","success","count","unsubscribe","onSnapshot","ss","data","alert","_this2","height","marg","color","btn_color","style","width","marginLeft","marginRight","marginTop","backgroundColor","onClick","TableRows","mounted","draw_tables","handle_resize","button_color","tab","i","tables","length","status","square","square_Square","push","divElement","clientHeight","window","addEventListener","color_button","index","t","ref","MainPage","update_status","counter","forEach","chair","chair_data","chair_status","table_id","parseInt","iter","loading","db_ref","display_status","initialize_status","draw_squares","rows","tablerow","key","this_main","get","squares","colors","marginBottom","legend","App","displayed","login","main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d80876e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { authenticate } from '../controller/login.js';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { user: '', pass: '', type: 1 }\r\n\r\n        this.handle_submitted = this.handle_submitted.bind(this);\r\n        this.handle_change = this.handle_change.bind(this);\r\n    }\r\n\r\n    handle_submitted(event) {\r\n        var user = this.state['user'];\r\n        var pass = this.state['pass'];\r\n        var auth = authenticate(user, pass);\r\n\r\n        var type;\r\n        if (event.target[2].checked) {\r\n            type = 1\r\n        } else {\r\n            type = 2\r\n        }\r\n\r\n        if (auth) {\r\n            this.props.change_state(type);\r\n\r\n        }\r\n    }\r\n\r\n    handle_change(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"d-flex h-100 justify-content-center align-items-center flex-column\">\r\n                <h1 class=\"display-4\">StudySeat</h1>\r\n                <form onSubmit={ this.handle_submitted }>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"email\" class=\"form-control\" id=\"user\" placeholder=\"Username\" onChange = { this.handle_change }/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" class=\"form-control\" id=\"pass\" placeholder=\"Password\" onChange = { this.handle_change } />\r\n                    </div>\r\n\r\n                    <div class=\"form-group btn-group btn-group-toggle d-flex justify-content-center\" data-toggle=\"buttons\">\r\n                        <label class=\"btn btn-secondary active\">\r\n                            <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Student\r\n                        </label>\r\n                        <label class=\"btn btn-secondary\">\r\n                            <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Staff\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex justify-content-center\">\r\n                        <button type=\"submit\" id=\"login\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Login;","export function authenticate(user, pass) {\r\n    console.log(user);\r\n    console.log(pass);\r\n    return true;\r\n}","import firebase from 'firebase'\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyDT3YoWmgq6SJ2DmuZuoaUyAEDrTz6wNWE\",\r\n    authDomain: \"studyseat-6262b.firebaseapp.com\",\r\n    databaseURL: \"https://studyseat-6262b.firebaseio.com\",\r\n    projectId: \"studyseat-6262b\",\r\n    storageBucket: \"studyseat-6262b.appspot.com\",\r\n    messagingSenderId: \"216845681832\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase","import React, { Component } from 'react'\r\nimport { reserve_seat } from '../controller/db_handler'\r\n\r\nexport default class Square extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.reserve = this.reserve.bind(this);\r\n    }\r\n    \r\n    reserve(id) {\r\n        console.log(id, \" clicked\")\r\n        reserve_seat(id)\r\n    }\r\n\r\n    render() {\r\n        var height = this.props.height\r\n        var marg = this.props.marg\r\n        var color = this.props.color\r\n        var btn_color = this.props.btn_color\r\n        var id = this.props.id\r\n        return (\r\n            <div class=\"d-flex align-item-center flex-column\" >\r\n                <div style={ { width:height, height:height, marginLeft:marg, marginRight:marg, marginTop:marg, 'backgroundColor':color } }></div>\r\n                <button class={`btn ${btn_color}`} style={ { marginLeft: marg, marginRight: marg } } onClick={ () => { this.reserve(id) } } >reserve</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import firebase from '../firestore'\r\n\r\nexport function get_status() {\r\n    var db = firebase.firestore()\r\n    var chairRef = db.collection(\"chair\")\r\n\r\n    return chairRef.get().then(function(ss) {\r\n        var tables = []\r\n        var counter = -1\r\n\r\n        ss.forEach(function (chair) {\r\n            var chair_data = chair.data()\r\n\r\n            var chair_status = chair_data['chair_status']\r\n            var table_id = parseInt(chair_data['table_id'])\r\n            var chair_id = chair.id\r\n\r\n            //if the table id is further than the furthest point, fill the tables array with empty array until the table id is the last index\r\n            if (counter < table_id) {\r\n                var iter = table_id - counter\r\n\r\n                for (var i = 0; i < iter; i++) {\r\n                    tables.push([])\r\n                }\r\n\r\n                counter = table_id\r\n            }\r\n\r\n            tables[table_id].push({\r\n                id: chair_id,\r\n                status: chair_status\r\n            })\r\n        })\r\n\r\n        return tables\r\n    })\r\n}\r\n\r\nexport function reserve_seat(chair_id) {\r\n    var db = firebase.firestore()\r\n    var resRef = db.collection(`chair/${chair_id}/reservation`)\r\n\r\n    //add itself to the reservation, first person that manages to add itself wins the first come first serve\r\n    return resRef.add({\r\n        date_added: new Date().getUTCMilliseconds()\r\n    })\r\n    .then(function(docRef) {\r\n        var id = docRef.id\r\n        var success = false\r\n        var count = 0\r\n\r\n        var unsubscribe = docRef.onSnapshot(function(ss) {\r\n            success = ss.data()['status']\r\n            \r\n            if (count === 1) {\r\n                if (success && count === 1) {\r\n                    alert(\"Successfully reserved the seat!\")\r\n                } else {\r\n                    alert(\"Failed to reserve the seat\")\r\n                }\r\n                unsubscribe()\r\n            }\r\n\r\n            count++\r\n        })\r\n\r\n        return success\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport Square from './square'\r\n\r\nclass TableRows extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: 0,\r\n            mounted: false\r\n        };\r\n\r\n        this.draw_tables = this.draw_tables.bind(this);\r\n        this.handle_resize = this.handle_resize.bind(this);\r\n    }\r\n\r\n    draw_tables(height, button_color) {\r\n        var tab = [];\r\n        var marg = height * .2\r\n        var btn_color;\r\n        if (button_color === 0) {\r\n            btn_color = 'btn-light'\r\n        } else {\r\n            btn_color = 'btn-dark'\r\n        }\r\n        var active = ''\r\n\r\n        for (var i = 0; i < this.props.tables.length; i++) {\r\n            var color = '';\r\n            var status = this.props.tables[i]['status']\r\n            var id = this.props.tables[i]['id']\r\n            switch (status) {\r\n                //available\r\n                case(\"0\"):\r\n                    color = '#bbbbbb';\r\n                    break;\r\n                //unavailable\r\n                case(\"1\"):\r\n                    color = '#ff2445';\r\n                    break;\r\n                //reserved\r\n                case(\"2\"):\r\n                    color = '#8f26ff';\r\n                    break;\r\n                //semi-taken\r\n                case(\"3\"):\r\n                    color = '#ffb129';\r\n                    break;\r\n                default:\r\n                    color = '#000000';\r\n                    break;\r\n            }\r\n            var square = <Square height={height} marg={marg} color={color} id={id} btn_color={btn_color} />\r\n\r\n            tab.push(square);\r\n        }\r\n\r\n        return tab;\r\n    }\r\n\r\n    handle_resize() {\r\n        var height = this.divElement.clientHeight\r\n        this.setState({\r\n            height: height,\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handle_resize()\r\n\r\n        window.addEventListener('resize', this.handle_resize)\r\n    }\r\n\r\n    render() {\r\n        var color\r\n        var color_button\r\n        if (this.props.index % 2 === 0) {\r\n            color = '#444444'\r\n            color_button = 0\r\n        }\r\n        else {\r\n            color = '#ffffff'\r\n            color_button = 1\r\n        }\r\n\r\n        var height = this.state['height'] * .6;\r\n        var t;\r\n        if (this.state['mounted']) {\r\n            t = this.draw_tables(height, color_button);\r\n        }\r\n\r\n        return (\r\n            <div class=\"d-flex h-25 justify-content-center align-item-center\" ref={ (divElement)=> this.divElement = divElement } style={ { 'backgroundColor': color } } >\r\n                {t}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRows;","import React, { Component } from 'react';\r\nimport { get_status } from '../controller/db_handler.js';\r\nimport TableRows from './tablerow.js';\r\nimport firebase from '../firestore'\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tables: [],\r\n            loading: true\r\n        }\r\n\r\n        this.db_ref = firebase.firestore().collection(\"chair\")\r\n\r\n        this.display_status = this.display_status.bind(this);\r\n        this.initialize_status = this.initialize_status.bind(this);\r\n        this.handle_resize = this.handle_resize.bind(this);\r\n        this.draw_squares = this.draw_squares.bind(this);\r\n        this.update_status = this.update_status.bind(this);\r\n    }\r\n\r\n    display_status(tables) {\r\n        var rows = [];\r\n        for (var i = 0; i < tables.length; i++) {\r\n            rows.push(<TableRows tables={ tables[i] } key={i} index={ i } />);\r\n        }\r\n        return rows\r\n    }\r\n\r\n    initialize_status() {\r\n        var this_main = this\r\n        get_status().then(function (tables) {\r\n            this_main.setState({\r\n                tables: tables\r\n            })\r\n        }).then(function () {\r\n            this_main.setState({\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    update_status = (ss) => {\r\n        var tables = []\r\n        var counter = -1\r\n\r\n        ss.forEach(function(chair) {\r\n            var chair_data = chair.data()\r\n            var chair_status = chair_data['chair_status']\r\n            var table_id = parseInt(chair_data['table_id'])\r\n            var chair_id = chair.id\r\n\r\n            //if the table id is further than the furthest point, fill the tables array with empty array until the table id is the last index\r\n            if (counter < table_id) {\r\n                var iter = table_id - counter\r\n\r\n                for (var i = 0; i < iter; i++) {\r\n                    tables.push([])\r\n                }\r\n\r\n                counter = table_id\r\n            }\r\n\r\n            tables[table_id].push({\r\n                id: chair_id,\r\n                status: chair_status\r\n            })\r\n        })\r\n\r\n        this.setState({\r\n            tables: tables\r\n        })\r\n    }\r\n\r\n    draw_squares(height) {\r\n        var squares = []\r\n        var colors = ['#bbbbbb', '#ff2445', '#ffb129', '#8f26ff']\r\n        var marg = height * .2\r\n        for (var i = 0; i < 4; i++) {\r\n            var square = <div style={ { width:height, height:height, marginLeft:marg, marginRight:marg, marginTop:marg, marginBottom:marg, 'backgroundColor':colors[i] } }></div>\r\n            squares.push(square)\r\n        }\r\n        return squares\r\n     }\r\n\r\n    handle_resize() {\r\n        var height = this.divElement.clientHeight\r\n        this.setState({\r\n            height: height,\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handle_resize()\r\n        this.initialize_status()\r\n        this.unsubscribe = this.db_ref.onSnapshot(this.update_status)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe()\r\n    }\r\n\r\n    render() {\r\n        var height = this.state['height'] * .6\r\n\r\n        var legend = (\r\n            <div class=\"row\" ref={ (divElement)=> this.divElement = divElement } >\r\n                <div class=\"col\">\r\n                    <h3>Available: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Taken: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Semi-taken: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Reserved: </h3>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state['mounted']) {\r\n            var square = this.draw_squares(height)\r\n            legend = (\r\n                <div class=\"row\" ref={ (divElement) => this.divElement = divElement } >\r\n                    <div class=\"col\">\r\n                        <h3>Available: </h3>\r\n                        {square[0]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Taken: </h3>\r\n                        {square[1]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Semi-taken: </h3>\r\n                        {square[2]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Reserved: </h3>\r\n                        {square[3]}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var rows = <div />\r\n        \r\n        if (!this.state['loading']) {\r\n            rows = this.display_status(this.state['tables']);\r\n        }\r\n\r\n        return (\r\n            <div class=\"d-flex h-100 flex-column\">\r\n                {legend}\r\n                {rows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport Login from './view/login.js';\r\nimport MainPage from './view/main.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { displayed: 0 };\r\n\r\n    this.change_state = this.change_state.bind(this);\r\n  }\r\n\r\n  change_state(value) {\r\n    this.setState({\r\n      displayed: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state['displayed'] === 0) {\r\n      return (\r\n        <div class=\"container-fluid h-100\">\r\n          <Login change_state = { this.change_state } />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state['displayed'] === 1) {\r\n      return (\r\n        <div class=\"container-fluid h-100\">\r\n          <MainPage change_state = { this.change_state } />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div class=\"container-fluid d-flex h-100 justify-content-center align-items-center flex-column\">\r\n          <h1>Oops, this state has not been implemented yet!</h1>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}