{"version":3,"sources":["view/login.js","controller/login.js","firestore.js","controller/main.js","controller/db_handler.js","view/tablerow.js","view/main.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","user","pass","handle_submitted","bind","assertThisInitialized","handle_change","event","console","log","authenticate","change_state","setState","defineProperty","target","id","value","react_default","a","createElement","class","onSubmit","type","placeholder","onChange","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","fetch_status","status","collection","get","then","ss","tables","counter","forEach","chair","chair_data","data","chair_status","table_id","parseInt","chair_id","iter","i","push","TableRows","height","mounted","draw_tables","handle_resize","tab","marg","length","color","square","style","width","marginLeft","marginRight","marginTop","marginBottom","backgroundColor","divElement","clientHeight","window","addEventListener","_this2","index","t","ref","MainPage","update_status","loading","db_ref","display_status","initialize_status","draw_squares","rows","tablerow","key","this_main","squares","colors","unsubscribe","onSnapshot","legend","App","displayed","login","main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ad616e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { authenticate } from '../controller/login.js';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { user: '', pass: '' }\r\n\r\n        this.handle_submitted = this.handle_submitted.bind(this);\r\n        this.handle_change = this.handle_change.bind(this);\r\n    }\r\n\r\n    handle_submitted(event) {\r\n        var user = this.state['user'];\r\n        var pass = this.state['pass'];\r\n        var auth = authenticate(user, pass);\r\n\r\n        if (auth) {\r\n            this.props.change_state(1);\r\n        }\r\n    }\r\n\r\n    handle_change(event) {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"d-flex h-100 justify-content-center align-items-center flex-column\">\r\n                <h1 class=\"display-4\">StudySeat</h1>\r\n                <form onSubmit={ this.handle_submitted }>\r\n                    <div class=\"form-group\">\r\n                        <input type=\"email\" class=\"form-control\" id=\"user\" placeholder=\"Username\" onChange = { this.handle_change }/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" class=\"form-control\" id=\"pass\" placeholder=\"Password\" onChange = { this.handle_change } />\r\n                    </div>\r\n\r\n                    <div class=\"form-group d-flex justify-content-center\">\r\n                        <button type=\"submit\" id=\"login\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default Login;","export function authenticate(user, pass) {\r\n    console.log(user);\r\n    console.log(pass);\r\n    return true;\r\n}","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDT3YoWmgq6SJ2DmuZuoaUyAEDrTz6wNWE\",\r\n    authDomain: \"studyseat-6262b.firebaseapp.com\",\r\n    databaseURL: \"https://studyseat-6262b.firebaseio.com\",\r\n    projectId: \"studyseat-6262b\",\r\n    storageBucket: \"studyseat-6262b.appspot.com\",\r\n    messagingSenderId: \"216845681832\"\r\n}\r\n\r\nconst setting = {\r\n    timestampsInSnapshots: true\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings(setting);\r\n\r\nexport default firebase;","import {get_status} from './db_handler.js';\r\n\r\nexport function fetch_status(status) {\r\n    return get_status()\r\n\r\n    /* dummy data\r\n    status.setState({\r\n        tables: [\r\n            [1, 2, 3],\r\n            [0, 0, 1, 2],\r\n            [1, 0, 3, 2]\r\n        ]\r\n    });\r\n    */\r\n}","import firebase from '../firestore'\r\n\r\nexport function get_status() {\r\n    var db = firebase.firestore()\r\n    var chairRef = db.collection(\"chair\")\r\n\r\n    return chairRef.get().then(function(ss) {\r\n        var tables = []\r\n        var counter = -1\r\n\r\n        ss.forEach(function (chair) {\r\n            var chair_data = chair.data()\r\n\r\n            var chair_status = chair_data['chair_status']\r\n            var table_id = parseInt(chair_data['table_id'])\r\n            var chair_id = chair.id\r\n\r\n            //if the table id is further than the furthest point, fill the tables array with empty array until the table id is the last index\r\n            if (counter < table_id) {\r\n                var iter = table_id - counter\r\n\r\n                for (var i = 0; i < iter; i++) {\r\n                    tables.push([])\r\n                }\r\n\r\n                counter = table_id\r\n            }\r\n\r\n            tables[table_id] = {\r\n                id: chair_id,\r\n                status: chair_status\r\n            }\r\n        })\r\n\r\n        return tables\r\n    })\r\n}","import React, { Component } from 'react';\r\n\r\nclass TableRows extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: 0,\r\n            mounted: false\r\n        };\r\n\r\n        this.draw_tables = this.draw_tables.bind(this);\r\n        this.handle_resize = this.handle_resize.bind(this);\r\n    }\r\n\r\n    draw_tables(height) {\r\n        var tab = [];\r\n        var marg = height * .2\r\n        for (var i = 0; i < this.props.tables.length; i++) {\r\n            var color = '';\r\n            switch (this.props.tables[i]['status']) {\r\n                //available\r\n                case(\"0\"):\r\n                    color = '#bbbbbb';\r\n                    break;\r\n                //unavailable\r\n                case(\"1\"):\r\n                    color = '#ff2445';\r\n                    break;\r\n                //reserved\r\n                case(\"2\"):\r\n                    color = '#8f26ff';\r\n                    break;\r\n                //semi-taken\r\n                case(\"3\"):\r\n                    color = '#ffb129';\r\n                    break;\r\n                default:\r\n                    color = '#000000';\r\n                    break;\r\n            }\r\n            var square = (\r\n                <div style={ { width:height, height:height, marginLeft:marg, marginRight:marg, marginTop:marg, marginBottom:marg, 'backgroundColor':color } }></div>\r\n            );\r\n\r\n            tab.push(square);\r\n        }\r\n\r\n        return tab;\r\n    }\r\n\r\n    handle_resize() {\r\n        var height = this.divElement.clientHeight\r\n        this.setState({\r\n            height: height,\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handle_resize()\r\n\r\n        window.addEventListener('resize', this.handle_resize)\r\n    }\r\n\r\n    render() {\r\n        var color = 0\r\n        if (this.props.index % 2 === 0) {\r\n            color = '#444444'\r\n        }\r\n        else {\r\n            color = '#ffffff'\r\n        }\r\n\r\n        var height = this.state['height'] * .6;\r\n        var t;\r\n        if (this.state['mounted']) {\r\n            t = this.draw_tables(height);\r\n        }\r\n\r\n        return (\r\n            <div class=\"d-flex h-25 justify-content-center align-item-center\" ref={ (divElement)=> this.divElement = divElement } style={ { 'backgroundColor': color } } >\r\n                {t}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRows;","import React, { Component } from 'react';\r\nimport { fetch_status } from '../controller/main.js';\r\nimport TableRows from './tablerow.js';\r\nimport firebase from '../firestore'\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tables: [],\r\n            loading: true\r\n        }\r\n\r\n        this.db_ref = firebase.firestore().collection(\"chair\")\r\n\r\n        this.display_status = this.display_status.bind(this);\r\n        this.initialize_status = this.initialize_status.bind(this);\r\n        this.handle_resize = this.handle_resize.bind(this);\r\n        this.draw_squares = this.draw_squares.bind(this);\r\n        this.update_status = this.update_status.bind(this);\r\n    }\r\n\r\n    display_status(tables) {\r\n        var rows = [];\r\n        for (var i = 0; i < tables.length; i++) {\r\n            rows.push(<TableRows tables={ tables[i] } key={i} index={ i } />);\r\n        }\r\n        return rows\r\n    }\r\n\r\n    initialize_status() {\r\n        var this_main = this\r\n        fetch_status(this).then(function (tables) {\r\n            this_main.setState({\r\n                tables: tables\r\n            })\r\n        }).then(function () {\r\n            this_main.setState({\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    update_status = (ss) => {\r\n        var tables = []\r\n        var counter = -1\r\n\r\n        ss.forEach(function(chair) {\r\n            var chair_data = chair.data()\r\n            var chair_status = chair_data['chair_status']\r\n            var table_id = parseInt(chair_data['table_id'])\r\n            var chair_id = chair.id\r\n\r\n            //if the table id is further than the furthest point, fill the tables array with empty array until the table id is the last index\r\n            if (counter < table_id) {\r\n                var iter = table_id - counter\r\n\r\n                for (var i = 0; i < iter; i++) {\r\n                    tables.push([])\r\n                }\r\n\r\n                counter = table_id\r\n            }\r\n\r\n            tables[table_id].push({\r\n                id: chair_id,\r\n                status: chair_status\r\n            })\r\n        })\r\n\r\n        this.setState({\r\n            tables: tables\r\n        })\r\n    }\r\n\r\n    draw_squares(height) {\r\n        var squares = []\r\n        var colors = ['#bbbbbb', '#ff2445', '#ffb129', '#8f26ff']\r\n        var marg = height * .2\r\n        for (var i = 0; i < 4; i++) {\r\n            var square = <div style={ { width:height, height:height, marginLeft:marg, marginRight:marg, marginTop:marg, marginBottom:marg, 'backgroundColor':colors[i] } }></div>\r\n            squares.push(square)\r\n        }\r\n        return squares\r\n     }\r\n\r\n    handle_resize() {\r\n        var height = this.divElement.clientHeight\r\n        this.setState({\r\n            height: height,\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handle_resize()\r\n        this.initialize_status()\r\n        this.unsubscribe = this.db_ref.onSnapshot(this.update_status)\r\n    }\r\n\r\n    render() {\r\n        var height = this.state['height'] * .6\r\n\r\n        var legend = (\r\n            <div class=\"row\" ref={ (divElement)=> this.divElement = divElement } >\r\n                <div class=\"col\">\r\n                    <h3>Available: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Taken: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Semi-taken: </h3>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h3>Reserved: </h3>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state['mounted']) {\r\n            var square = this.draw_squares(height)\r\n            legend = (\r\n                <div class=\"row\" ref={ (divElement) => this.divElement = divElement } >\r\n                    <div class=\"col\">\r\n                        <h3>Available: </h3>\r\n                        {square[0]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Taken: </h3>\r\n                        {square[1]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Semi-taken: </h3>\r\n                        {square[2]}\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <h3>Reserved: </h3>\r\n                        {square[3]}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        var rows = <div />\r\n        \r\n        if (!this.state['loading']) {\r\n            rows = this.display_status(this.state['tables']);\r\n        }\r\n\r\n        return (\r\n            <div class=\"d-flex h-100 flex-column\">\r\n                {legend}\r\n                {rows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport Login from './view/login.js';\r\nimport MainPage from './view/main.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { displayed: 1 };\r\n\r\n    this.change_state = this.change_state.bind(this);\r\n  }\r\n\r\n  change_state(value) {\r\n    this.setState({\r\n      displayed: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state['displayed'] === 0) {\r\n      return (\r\n        <div class=\"container-fluid h-100\">\r\n          <Login change_state = { this.change_state } />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state['displayed'] === 1) {\r\n      return (\r\n        <div class=\"container-fluid h-100\">\r\n          <MainPage change_state = { this.change_state } />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div class=\"container-fluid d-flex h-100 justify-content-center align-items-center flex-column\">\r\n          <h1>Oops, this state has not been implemented yet!</h1>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}